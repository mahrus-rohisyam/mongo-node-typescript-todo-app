tags: 
  name: Auth
  description: Authentication

/auth/register:
  post:
    summary: Register a user
    tags: [Auth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - firstName
              - lastName
              - email
              - password
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
                format: email
                description: must be unique
              password:
                type: string
                format: password
                minLength: 8
            example:
              firstName: fake
              lastName: name
              email: fake@example.com
              password: passwor1
    responses:
      "201":
        description: Created
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [success,error]
                message:
                  type: string
                user:
                  $ref: '#/components/schemas/User'
                tokens:
                  $ref: '#/components/schemas/AuthTokens'
      "400":
        $ref: '#/components/responses/DuplicateEmail'
      "422":
        $ref: '#/components/responses/ErrorValidation'

/auth/login:
  post:
    summary: Login a user
    tags: [Auth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
                minLength: 8
            example:
              email: fake@example.com
              password: passwor1
    responses:
      "200":
        description: Ok
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [success,error]
                message:
                  type: string
                user:
                  $ref: '#/components/schemas/User'
                tokens:
                  $ref: '#/components/schemas/AuthTokens'
      "401":
        description: Invalid email or password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              status: error
              message: Invalid credentials
              errors: []
      "422":
        $ref: '#/components/responses/ErrorValidation'
                        
/auth/logout:
  post:
    summary: Logout
    tags: [Auth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - refreshToken
            properties:
              refreshToken:
                type: string
            example:
              refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
    responses:
      "204":
        description: No content
      "404":
        $ref: '#/components/responses/NotFound'
      "422":
        $ref: '#/components/responses/ErrorValidation'

/auth/refresh-token:
  post:
    summary: Refresh token
    tags: [Auth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - refreshToken
            properties:
              refreshToken:
                type: string
            example:
              refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
    responses:
      "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success,error]
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                  access:
                    $ref: '#/components/schemas/Token'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "422":
        $ref: '#/components/responses/ErrorValidation'